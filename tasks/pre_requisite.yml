---
- assert:
    that:
    - "hostvars[inventory_hostname]['xmrig'] is defined"
    msg: "'xmrig' configuration not found. Please define something."
- name: xmrig | Add the OS specific variables
  include_vars: "{{ hostvars[inventory_hostname]['ansible_os_family'] + '.yml' }}"
- name: xmrig | Set facts about role settings
  set_fact:
    xmrig_enable: "{{ hostvars[inventory_hostname]['xmrig'] |
                      json_query(\"[].role_settings[] |
                      map(&enable || 'no', @)\") | join() }}"
    xmrig_restart: "{{ hostvars[inventory_hostname]['xmrig'] |
                       json_query(\"[].role_settings[] |
                       map(&restart || 'no', @)\") | join() }}"
    xmrig_install_package: "{{ hostvars[inventory_hostname]['xmrig'] |
                               json_query(\"[].role_settings[] |
                               map(&install_package || 'no', @)\") | join() }}"
    xmrig_package_state: "{{ hostvars[inventory_hostname]['xmrig'] |
                             json_query(\"[].role_settings[] |
                             map(&package_state || 'present', @)\") | join() }}"
- name: xmrig | Set facts about xmrig instance
  set_fact:
    xmrig_instances: "{{ hostvars[inventory_hostname]['xmrig'] |
                         json_query('[].instance_settings[].name') }}"
- assert:
    that:
    - "vars['xmrig_instances'] is defined"
    - "vars['xmrig_instances'] != []"
    msg: "'xmrig.xmrig_instance' configuration not found.
          Please define something."
- name: xmrig | Make working directory
  file:
    path: "{{ hostvars[inventory_hostname]['xmrig_conf_dest'] | default(omit) }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
  when:
  - "vars['xmrig_instances'] is defined"
  - "vars['xmrig_instances'] != ''"
